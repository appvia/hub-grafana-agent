---
swagger: "2.0"
info:
  description: "an agent used to provision and configure Grafana resources"
  version: "v1beta"
  title: "hub-grafana-agent"
  contact:
    name: "admin@appvia.io"
    url: "https://github.com/appvia/hub-grafana-agent"
    email: "support@appvia.io"
basePath: "/api/hub.appvia.io/v1beta"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
security:
- apikey: []
paths:
  /healthz:
    get:
      tags:
      - "health"
      summary: "Get health of Agent"
      description: "Returns health and status information of the API daemon and\n\
        related components such as the runtime.\n"
      parameters: []
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/responses/dashboard"
        default:
          description: "A generic error returned by the api"
          schema:
            $ref: "#/responses/apierror"
  /dashboards/{name}:
    parameters:
      - $ref: "#/parameters/grafana-api-key"
      - $ref: "#/parameters/grafana-url"
      - $ref: "#/parameters/grafana-ca-cert"
    get:
      summary: "Get the dashboard for a name"
      description: "Used to retrieve a dashboard\n"
      parameters:
      - name: "name"
        in: "path"
        description: "The name for the dashboard"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "The specification of a dashboard"
          schema:
            $ref: "#/responses/dashboard"
        404:
          description: "Resource not found"
          schema:
            $ref: "#/responses/apierror"
        default:
          description: "A generic error returned by the api"
          schema:
            $ref: "#/responses/apierror"
    put:
      summary: "Create a new dashboard for a name"
      description: "Used to create a new dashboard for a name\n"
      parameters:
      - $ref: "#/parameters/name"
      - $ref: "#/parameters/template_url"
      responses:
        200:
          description: "The specification of a dashboard"
          schema:
            $ref: "#/responses/dashboard"
    delete:
      summary: "Delete a dashboard for a name"
      description: "Used to delete a dashboard for a name\n"
      parameters:
      - name: "name"
        in: "path"
        description: "The name for the dashboard"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "The resource was deleted successfully."
        default:
          description: "A generic error returned by the api"
          schema:
            $ref: "#/responses/apierror"
  /dashboards/{name}/alerts:
    parameters:
      - $ref: "#/parameters/grafana-api-key"
      - $ref: "#/parameters/grafana-url"
      - $ref: "#/parameters/grafana-ca-cert"
    get:
      summary: "Get alerts for a dashboard"
      description: "Used to retrieve alerts for a dashboard\n"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the dashboard"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "The specification of an alert"
          schema:
            $ref: "#/responses/alerts"
        404:
          description: "Not found"
          schema:
            $ref: "#/responses/apierror"
        default:
          description: "A generic error returned by the api"
          schema:
            $ref: "#/responses/apierror"
  /users:
    put:
      summary: "Add a user"
      description: "Used to create a new user\n"
      parameters:
      - name: "user"
        in: "body"
        description: "The grafana user to be created"
        required: true
        schema:
          $ref: "#/definitions/UserList"
      responses:
        200:
          description: "The specification of a user"
          schema:
            $ref: "#/definitions/UserList"
securityDefinitions:
  apikey:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  APIError:
    type: "object"
    required:
    - "reason"
    properties:
      reason:
        type: "string"
        description: "A human readable description used to define what error has occured"
      detail:
        type: "string"
        description: "Additional details related to the error"
    description: "Is a generic error event returned when the we have an internal error"
  Dashboard:
    type: "object"
    required:
    - "name"
    - "url"
    - "id"
    - "uid"
    properties:
      name:
        type: "string"
        description: "The name this dashboard is for"
      url:
        type: "string"
        description: "The url of this dashboard"
      id:
        type: "string"
        description: "The id of this dashboard"
      uid:
        type: "string"
        description: "The uid of this dashboard"
    description: "The definition of a dashboard"
    example:
      name: "dev"
      url: "https://yourgrafana.com/d/abc123/yourdash"
      id: "123"
      uid: "abc123"
  Alert:
    type: "object"
    required:
    - "name"
    - "url"
    - "id"
    - "state"
    properties:
      name:
        type: "string"
        description: "The name of the alert"
      url:
        type: "string"
        description: "The url of the dashboard"
      id:
        type: "string"
        description: "The id of this dashboard"
      state:
        type: "string"
        description: "The state of the alert"
    description: "The definition of an alert"
    example:
      name: "my-alert"
      url: "https://yourgrafana.com/d/abc123/yourdash"
      id: "123"
      state: "no_data"
  AlertList:
    description: "The definition of a Grafana alert list"
    type: "object"
    items:
      items:
        type: array
        items:
          "$ref": "#/definitions/Alert"
  TemplateUrl:
    description: "Template URL"
    type: "object"
    properties:
      template_url:
        description: "The URL of a Grafana dashboard template"
        type: "string"
    required:
      - template_url
  User:
    description: "The definition of a grafana user"
    type: "object"
    required:
    - "name"
    - "login"
    - "email"
    properties:
      name:
        type: "string"
        description: "The name of this user"
      login:
        type: "string"
        description: "The login username of this user"
      email:
        type: "string"
        description: "The email of this user"
      password:
        type: "string"
        description: "The password of this user, will not be returned in a get request"
      id:
        type: "integer"
        description: "The user id"
  UserList:
    description: "The definition of a grafana user list"
    type: "object"
    items:
      items:
        type: array
        items:
          "$ref": "#/definitions/User"
parameters:
  name:
    name: "name"
    in: "path"
    description: "The name of a resource"
    required: true
    type: "string"
    x-exportParamName: "Name"
  email:
    name: "email"
    in: "path"
    description: "Email address of a user"
    required: true
    type: "string"
    x-exportParamName: "Email"
  template_url:
    name: "template_url"
    in: "body"
    description: "The URL of a grafana dashboard"
    schema:
      "$ref": "#/definitions/TemplateUrl"
  grafana-api-key:
    name: "X-Grafana-API-Key"
    description: "An API key used for requests to the Grafana API"
    in: "header"
    type: "string"
    required: true
  grafana-url:
    name: "X-Grafana-URL"
    description: "The URL of the Grafana instance"
    in: "header"
    type: "string"
    required: true
  grafana-ca-cert:
    name: "X-Grafana-CA"
    description: "Base64 encoded CA certificate for requests to Grafana API"
    in: "header"
    type: "string"
    required: true
  grafana-basic-auth:
    name: "X-Grafana-Basic-Auth"
    description: "Admin basic auth credentials"
    in: "header"
    type: "string"
    required: true
responses:
  apierror:
    description: "A generic error returned by the api"
    schema:
      $ref: "#/definitions/APIError"
  dashboard:
    description: "The specification of a dashboard"
    schema:
      $ref: "#/definitions/Dashboard"
  alerts:
    description: "The specification of a dashboard"
    schema:
      $ref: "#/definitions/AlertList"
